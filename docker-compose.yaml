version: '3.8'

services:
  mysql:
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: SpringBoot123
      MYSQL_DATABASE: springbootdb
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 3s
      retries: 10
    image: mysql:latest
    ports:
      - "3306:3306"
    restart: always
    volumes:
      - ./database:/docker-entrypoint-initdb.d/:ro
    networks:
      - spring-boot-network

  adminer:
    container_name: adminer
    depends_on:
      - mysql
    image: adminer
    ports:
      - 8080:8080
    restart: always
    networks:
      - spring-boot-network

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    command: sh run.sh
    container_name: api
    depends_on:
      mysql:
        condition: service_healthy
    image: api
    ports:
      - 8000:8000
      - 35729:35729
      - 5005:5005
    volumes:
      - ./:/app
      - ./.m2:/root/.m2
    working_dir: /app
    networks:
      - spring-boot-network

  mercure:
    container_name: mercure
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
    # Uncomment the following line to enable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    ports:
      - '1234:80'
      - '443:443'
    volumes:
      - mercure_data:/data
      - mercure_config:/config

      # Must clone project-chat-front to make this work /!\
#  react:
#    container_name: react
#    build: 
#      context: ./project-chat-front
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./project-chat-front/src:/app/src
#      - /app/node_modules
#    restart: always

networks:
  spring-boot-network:
    driver: bridge

volumes:
  mercure_data:
  mercure_config: